# Generated by Django 4.1 on 2022-12-21 18:27

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CryptoUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='Имя пользователя')),
                ('email', models.EmailField(max_length=150, unique=True, verbose_name='Адрес электронной почты')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('username',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coin_id', models.CharField(max_length=500, null=True, verbose_name='Название актива')),
                ('symbol', models.CharField(max_length=500, null=True, verbose_name='Сокращенное название актива')),
                ('name', models.CharField(max_length=500, null=True, verbose_name='Название актива')),
                ('market_cap_rank', models.IntegerField(null=True, verbose_name='Ранг актива по капитализации')),
                ('image', models.URLField(max_length=500, null=True, verbose_name='Ссылка на картинку')),
                ('current_price', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('market_cap', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('fully_diluted_valuation', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('total_volume', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('high_24h', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('low_24h', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('price_change_24h', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('price_change_percentage_24h', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('market_cap_change_24h', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('market_cap_change_percentage_24h', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('circulating_supply', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('total_supply', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('max_supply', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('ath', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('ath_change_percentage', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('ath_date', models.DateTimeField(null=True)),
                ('atl', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('atl_change_percentage', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('atl_date', models.DateTimeField(null=True)),
                ('roi', models.JSONField(default=dict, null=True)),
                ('last_updated', models.DateTimeField(null=True)),
                ('platforms', models.JSONField(default=dict, null=True, verbose_name='Платформы')),
            ],
            options={
                'verbose_name': 'Активы',
                'ordering': ['market_cap_rank'],
            },
        ),
        migrations.CreateModel(
            name='AssetForCryptoUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('amount', models.DecimalField(decimal_places=10, help_text='Введите кол-во актива', max_digits=50, verbose_name='Кол-во актива')),
                ('price', models.DecimalField(decimal_places=10, max_digits=50, verbose_name='Цена закупки актива')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_amounts', to='users.asset')),
            ],
            options={
                'verbose_name': 'Актив для пользователя',
                'verbose_name_plural': 'Актив для пользователя',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.CharField(max_length=500, null=True, verbose_name='Название актива')),
                ('name', models.CharField(max_length=500, null=True, verbose_name='Название актива')),
                ('market_cap', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('market_cap_change_24h', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('content', models.CharField(max_length=1000, null=True, verbose_name='Название актива')),
                ('volume_24h', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('last_updated', models.DateTimeField(null=True)),
            ],
            options={
                'verbose_name': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='GlobalMetrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_market_cap', models.DecimalField(decimal_places=5, max_digits=100, null=True)),
                ('total_volume', models.DecimalField(decimal_places=5, max_digits=100, null=True)),
                ('market_cap_percentage', models.JSONField(default=dict, null=True)),
                ('market_cap_change_percentage', models.DecimalField(decimal_places=5, max_digits=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserPortfolio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Main portfolio', max_length=255, unique=True)),
                ('total_balance', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('total_profit', models.DecimalField(decimal_places=15, max_digits=100, null=True)),
                ('change_24h', models.JSONField(default=dict, null=True)),
                ('portfolio_change_metrics', models.JSONField(default=dict, null=True)),
                ('assets', models.ManyToManyField(default={}, to='users.assetforcryptouser', verbose_name='Активы в портфеле')),
                ('crypto_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_portfolio', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Портфель пользователя',
                'verbose_name_plural': 'Портфели пользователя',
            },
        ),
    ]
