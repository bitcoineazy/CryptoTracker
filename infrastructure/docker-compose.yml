version: '3.3'
services:
  db:
    image: postgres:13.0-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis:
    image: redis:5.0-alpine

  celery:
    build: ../backend/TrackerBackend
    command: celery -A TrackerBackend worker -l info
    depends_on:
      - redis

  celery-beat:
    build: ../backend/TrackerBackend
    command: celery -A TrackerBackend beat -l info
    depends_on:
      - redis


  backend:
    image: noble6/cryptotracker_backend:latest
    restart: always
    volumes:
      - static_value:/code/static/
      - media_value:/code/media/
    depends_on:
      - db
      - redis
    env_file:
      - ./.env

  frontend:
    image: noble6/cryptotracker_frontend:latest
    restart: always
    command: npm start
    ports:
      - "3000:3000"
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - frontend_value:/app/frontend
    depends_on:
      - db
      - backend

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend_value:/usr/share/nginx/html/
      - static_value:/code/static/
      - media_value:/code/media/
    depends_on:
      - backend
      - frontend

  flower:
    build: ../backend/TrackerBackend
    command: celery -A TrackerBackend flower --port=5566 --broker=redis://redis:6379/0
    ports:
      - "5566:5566"
    depends_on:
      - redis
      - backend
      - celery
      - celery-beat

volumes:
  postgres_data:
  static_value:
  media_value:
  frontend_value: